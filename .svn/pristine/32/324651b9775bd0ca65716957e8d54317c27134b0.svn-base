<template>
    <!-- 不同类型玩法选号  -->
    <div class="quick_gametype_box">
        <div v-if="navid == 125">
            <div class="box_h">
                <!-- 标题 -->
                <div class="qu_gametype_title box_s">
                    <p>{{listObj1.digit}}</p>
                </div>
                <!-- 号码列表 -->
                <div class="qu_gametype_numbox box_h box_flex">
                    <div :class="['dice_itm_con',item.state?'change_this_style big_icon':'']" v-for="(item,index) in listObj1.num" :key="index" @click='ListOne' :data-index="index">
                        <div :class="['dice_itm_num','two_img'+item.value]"></div>
                        <div :class="['dice_itm_num','two_img'+item.value]"></div>
                    </div>
                </div>
                <!-- 功能按钮 -->
                <div class="box_h qu_gamebtn_box">
                    <div :class="[index == btnCurrent ? '':'' ]" v-for="(items,index) in gameBtn" :key="index"
                         @click="ListAllOne"
                         :data-name="items">{{items}}
                    </div>
                </div>
            </div>
            <div class="box_h">
                <!-- 标题 -->
                <div class="qu_gametype_title box_s">
                    <p>{{listObj2.digit}}</p>
                </div>
                <!-- 号码列表 -->
                <div class="qu_gametype_numbox danhao box_h box_flex">
                    <div :class="['dice_itm_num',item.state?'change_this_style big_icon':'',item.value == '1'?'two_img1':item.value == '2'?'two_img2':item.value == '3'?'two_img3':item.value == '4'?'two_img4':item.value == '5'?'two_img5':'two_img6']"
                         v-for="(item,index) in listObj2.num" :key="index"
                         @click='ListTwo' :data-index="index">
                    </div>
                </div>
                <!-- 功能按钮 -->
                <div class="box_h qu_gamebtn_box">
                    <a :class="[index == btnCurrent ? '':'' ]" v-for="(items,index) in gameBtn" :key="index"
                       @click="ListAllTwo"
                       :data-name="items">{{items}}</a>
                </div>
            </div>
        </div>
        <div v-else>
            <div class="box_h">
                <!-- 标题 -->
                <div class="qu_gametype_title box_s">
                    <p>{{listObj1.digit}}</p>
                </div>
                <!-- 号码列表 -->
                <div class="qu_gametype_numbox box_h box_flex">
                    <div :class="['box_s',item.state?'change_this_style big_icon':'']"
                         v-for="(item,index) in listObj1.num" :key="index"
                         @click='ListOne' :data-index="index">{{item.value}}
                    </div>
                </div>
                <!-- 功能按钮 -->
                <div class="box_h qu_gamebtn_box">
                    <div :class="[index == btnCurrent ? '':'' ]" v-for="(items,index) in gameBtn" :key="index"
                         @click="ListAllOne"
                         :data-name="items">{{items}}
                    </div>
                </div>
            </div>
            <div class="box_h">
                <!-- 标题 -->
                <div class="qu_gametype_title box_s">
                    <p>{{listObj2.digit}}</p>
                </div>
                <!-- 号码列表 -->
                <div class="qu_gametype_numbox box_h box_flex">
                    <div :class="['box_s',item.state?'change_this_style big_icon':'']"
                         v-for="(item,index) in listObj2.num" :key="index"
                         @click='ListTwo' :data-index="index">{{item.value}}
                    </div>
                </div>
                <!-- 功能按钮 -->
                <div class="box_h qu_gamebtn_box">
                    <a :class="[index == btnCurrent ? '':'' ]" v-for="(items,index) in gameBtn" :key="index"
                       @click="ListAllTwo"
                       :data-name="items">{{items}}</a>
                </div>
            </div>
        </div>
    </div>
</template>
<script>
  export default {
    props: {
      gameAry: {
        type: Array,
        required: true
      },
      navid: {
        type: Number,
        required: false
      }
    },
    data() {
      return {
        gameBtn: ["全", "大", "小", "奇", "偶", "清"], //按钮选项
        btnCurrent: -1, //点击状态
        selectAry: [],//选中的值
        state: true,
        listObj1: {}, //渲染的对象
        listObj2: {}, //渲染的对象
        listAry1: [], //选择内容
        listAry2: [], //选择内容
      }
    },
    methods: {
      // 选择单个号码
      ListOne(e) {
        let index = e.currentTarget.dataset.index
        let id = 0
        if (this.listObj1.num[index].state) {
          this.listObj1.num[index].state = false
        } else {
          this.listObj1.num[index].state = true

        }
        this.ListOneLimit(index)
      },
      ListTwo(e) {
        let index = e.currentTarget.dataset.index
        let id = 0
        if (this.listObj2.num[index].state) {
          this.listObj2.num[index].state = false
        } else {
          this.listObj2.num[index].state = true

        }
        this.ListTwoLimit(index)
      },
      // 判断
      ListOneLimit(index) {
        if (this.listObj2.num[index].state) {
          this.listObj2.num[index].state = false
        }
        this.putAry()
      },
      ListTwoLimit(index) {
        if (this.listObj1.num[index].state) {
          this.listObj1.num[index].state = false
        }
        this.putAry()
      },

      // 点击按钮
      ListAllOne(e) {
        let that = this
        let name = e.target.dataset.name
        that.listObj1.num.forEach(function (item, index) {
          item.state = false
          if (name == "全") {
            item.state = true
          } else if (name == "清") {
            item.state = false
          } else if (name == "大") {
            if (index > 2) {
              item.state = true
            }
          } else if (name == "小") {
            if (index < 3) {
              item.state = true
            }
          } else if (name == "奇") {
            if (index % 2 == 0) {
              item.state = true
            }
          } else if (name == "偶") {
            if (index % 2 != 0) {
              item.state = true
            }
          }
        });
        this.ListAllOneLimit()
      },
      ListAllTwo(e) {
        let that = this
        let name = e.target.dataset.name
        that.listObj2.num.forEach(function (item, index) {
          item.state = false
          if (name == "全") {
            item.state = true
          } else if (name == "清") {
            item.state = false
          } else if (name == "大") {
            if (index > 2) {
              item.state = true
            }
          } else if (name == "小") {
            if (index < 3) {
              item.state = true
            }
          } else if (name == "奇") {
            if (index % 2 == 0) {
              item.state = true
            }
          } else if (name == "偶") {
            if (index % 2 != 0) {
              item.state = true
            }
          }
        });
        this.ListAllTwoLimit()

      },
      // 数组判断
      ListAllOneLimit() {
        let indexAry = []
        this.listObj1.num.forEach(function (item, index) {
          if (item.state == true) {
            indexAry.push(index)
          }
        })
        for (let i = 0; i < indexAry.length; i++) {
          let num = indexAry[i]
          this.listObj2.num[num].state = false
        }
        this.putAry()
      },
      ListAllTwoLimit() {
        let indexAry = []
        this.listObj2.num.forEach(function (item, index) {
          if (item.state == true) {
            indexAry.push(index)
          }
        })
        for (let i = 0; i < indexAry.length; i++) {
          let num = indexAry[i]
          this.listObj1.num[num].state = false
        }
        this.putAry()
      },
      // 加入数组
      putAry() {
        let ary = []
        let listAry1 = []
        this.listObj1.num.forEach(function (item, index) {
          if (item.state == true) {
            listAry1.push(item.name)
          }
        })
        this.listAry1 = listAry1
        let listAry2 = []
        this.listObj2.num.forEach(function (item, index) {
          if (item.state == true) {
            listAry2.push(item.name)
          }
        })
        this.listAry2 = listAry2
        let num = parseInt(listAry1.length) * parseInt(listAry2.length)
        this.$emit("setbet", num)
        ary.push(listAry1.join(""))
        ary.push(listAry2.join(""))
        this.selectAry = ary
        this.$emit("getdata", this.selectAry)
      }
    },
    created() {
      this.listObj1 = this.gameAry[0]
      this.listObj2 = this.gameAry[1]
    }
  }
</script>

<style lang="scss" scoped>
    .quick_gametype_box {
        width: 100%;
        overflow: hidden;
        padding: 8px 0;

        .qu_gametype_title {
            height: 59px;
            text-align: center;
            font-size: 12px;
            color: #8e8e8e;
            line-height: 22px;
            justify-content: center;

            p {
                padding: 0 10px;
                color: #666666;
                font-size: 14px;
                font-weight: bold;
                line-height: 40px;
                border-radius: 5px;
            }
        }

        .qu_gametype_numbox {
            display: flex;
            justify-content: flex-start;
            flex-wrap: wrap;
            margin-left: 0;
            padding: 5px 0;

            .dice_itm_con{
                display: flex;
                justify-content:space-between;
                align-items: center;
                width: 75px;
                height: 59px;
                cursor: pointer;
                margin-right: 15px;

                .dice_itm_num{
                    width: 36px;
                    height: 36px;
                    background-size: 100%;

                    &.two_img11 {
                        background-image: url(../../assets/img/kuaisan/1.png);
                    }

                    &.two_img22 {
                        background-image: url(../../assets/img/kuaisan/2.png);
                    }

                    &.two_img33 {
                        background-image: url(../../assets/img/kuaisan/3.png);
                    }

                    &.two_img44 {
                        background-image: url(../../assets/img/kuaisan/4.png);
                    }

                    &.two_img55 {
                        background-image: url(../../assets/img/kuaisan/5.png);
                    }

                    &.two_img66 {
                        background-image: url(../../assets/img/kuaisan/6.png);
                    }
                }
                
                &.change_this_style{

                    .dice_itm_num{

                        &.two_img11 {
                            background-image: url(../../assets/img/kuaisan/1_a.png);
                        }

                        &.two_img22 {
                            background-image: url(../../assets/img/kuaisan/2_a.png);
                        }

                        &.two_img33 {
                            background-image: url(../../assets/img/kuaisan/3_a.png);
                        }

                        &.two_img44 {
                            background-image: url(../../assets/img/kuaisan/4_a.png);
                        }

                        &.two_img55 {
                            background-image: url(../../assets/img/kuaisan/5_a.png);
                        }

                        &.two_img66 {
                            background-image: url(../../assets/img/kuaisan/6_a.png);
                        }
                    }
                }
            }
            
            &.danhao{
                align-items: center;

                .dice_itm_num{
                    width: 36px !important;
                    height: 36px !important;
                    background-size: 100%;
                    margin-right: 20px;
                    cursor: pointer;

                    &.two_img1 {
                        background-image: url(../../assets/img/kuaisan/1.png);
                    }

                    &.two_img2 {
                        background-image: url(../../assets/img/kuaisan/2.png);
                    }

                    &.two_img3 {
                        background-image: url(../../assets/img/kuaisan/3.png);
                    }

                    &.two_img4 {
                        background-image: url(../../assets/img/kuaisan/4.png);
                    }

                    &.two_img5 {
                        background-image: url(../../assets/img/kuaisan/5.png);
                    }

                    &.two_img6 {
                        background-image: url(../../assets/img/kuaisan/6.png);
                    }

                    &.change_this_style{

                        &.two_img1 {
                            background-image: url(../../assets/img/kuaisan/1_a.png);
                        }

                        &.two_img2 {
                            background-image: url(../../assets/img/kuaisan/2_a.png);
                        }

                        &.two_img3 {
                            background-image: url(../../assets/img/kuaisan/3_a.png);
                        }

                        &.two_img4 {
                            background-image: url(../../assets/img/kuaisan/4_a.png);
                        }

                        &.two_img5 {
                            background-image: url(../../assets/img/kuaisan/5_a.png);
                        }

                        &.two_img6 {
                            background-image: url(../../assets/img/kuaisan/6_a.png);
                        }
                    }
                }  
            }
        }

        .qu_gamebtn_box {
            width: 218px;
            height: 59px;
            margin-top: 5px;
            padding: 0 5px;
            justify-content: space-around;
            justify-items: center;
            -webkit-box-align: center;
            -ms-flex-align: center;
            align-items: center;

            div,a{
                display: inline-block;
                text-align: center;
                width: 26px;
                height: 30px;
                line-height: 30px;
                font-size: 14px;
                color: #4E627A;
                border-radius: 13px;
                cursor: pointer;

                &:hover {
                    border: none;
                    color: #ffffff;
                    background-color: #008573;
                }
            }
        }
    }
</style>

