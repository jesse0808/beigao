<template>
    <div class="lhc_zf">
        <div :class="['zf_item',item.selectStatus ? 'select_item':'no_select_item']" @click="checkedItem(index)" v-for="(item,index) in playData" :key="index">
            <p>{{item.str}}</p>
            <b>{{item.text}}</b>
            <div>x{{item.Odds}}</div>
            <label>
                <input type="text" @click.stop="" v-model="item.num" @input="inputChange(index)">
            </label>
        </div>
    </div>
</template>

<script>
    export default {
        name: "zf",
        props:{
            noteMoney: {
                type: Number,
                required: true
            },
            playList: {
                type: Object,
                required: true
            },
            resetFun:{
                type: Boolean,
                required: true
            },
        },
        data(){
            return{
                playData:[
                    {
                        text:'大',
                        num:'',
                        selectStatus:false,
                        str:'总分大于等于175的，即视为中奖。'
                    },
                    {
                        text:'小',
                        num:'',
                        selectStatus:false,
                        str:'总分小于等于174的，即视为中奖。'
                    },
                    {
                        text:'单',
                        num:'',
                        selectStatus:false,
                        str:'总分是单数的，即视为中奖。'
                    },
                    {
                        text:'双',
                        num:'',
                        selectStatus:false,
                        str:'总分是双数的，即视为中奖。'
                    },
                    {
                        text:'大单',
                        num:'',
                        selectStatus:false,
                        str:'总分大于等于175且为单数的，即视为中奖。'
                    },
                    {
                        text:'大双',
                        num:'',
                        selectStatus:false,
                        str:'总分大于等于175且为双数的，即视为中奖。'
                    },
                    {
                        text:'小单',
                        num:'',
                        selectStatus:false,
                        str:'总分小于等于174且为单数的，即视为中奖。'
                    },
                    {
                        text:'小双',
                        num:'',
                        selectStatus:false,
                        str:'总分小于等于174且为双数的，即视为中奖。'
                    }
                ],
            }
        },
        created() {
            this.$emit('returnResetStatus')
            this.playData.forEach((item,index)=>{
                this.playList.PlayContentList.forEach((val,num)=>{
                    if (index === num){
                        item.Odds = val.Odds
                    }
                })
            })
        },
        watch:{
            resetFun(){
                if (this.resetFun){
                    this.$emit('returnResetStatus')
                    this.playData.forEach(item => {
                        item.selectStatus = false
                        item.num = ''
                    })
                    this.dataChange()
                }
            },
            noteMoney(){
                if (this.noteMoney > 0){
                    this.playData.forEach(item => {
                        if (item.selectStatus){
                            item.num = this.noteMoney
                        }
                    })
                }else{
                    this.playData.forEach(item => {
                        if (item.selectStatus){
                            item.num = ''
                        }
                    })
                }
                this.dataChange()
            }
        },
        methods:{
            //选中玩法
            checkedItem(index){
                this.playData[index].selectStatus = !this.playData[index].selectStatus
                if (this.playData[index].selectStatus && this.noteMoney > 0){
                    this.playData[index].num = this.noteMoney
                }else{
                    this.playData[index].num = ''
                }
                this.dataChange()
            },
            //数据变化是操作
            dataChange(){
              let sum = []
              this.playData.forEach(item => {
                  if (Number(item.num) > 0){
                      sum.push(item)
                  }
              })
              this.$emit('returnSelectNum',sum)
            },
            //input输入处理
            inputChange(index){
                this.playData[index].num = parseInt(this.playData[index].num.toString().replace(/[^\d]/g, ''))
                if (this.playData[index].num > 0){
                    this.playData[index].selectStatus = true
                }else{
                    this.playData[index].num = ''
                }
                this.dataChange()
            }
        }
    }
</script>

<style lang="scss" scoped>
    .lhc_zf{
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        width: 100%;
        padding: 0 20px;

        .zf_item{
            width: 380px;
            height: 150px;
            margin-bottom: 20px;
            text-align: center;
            cursor: pointer;
            border-radius: 10px;
            box-shadow: 0px 2px 16px 0px rgba(53, 63, 75, 0.1);
            overflow: hidden;

            b{
                line-height: 40px;
                text-align: center;
                font-size: 20px;
                letter-spacing: 2px;
            }

            div{
                font-size: 12px;
                font-weight: normal;
                font-stretch: normal;
                line-height: 15px;
                letter-spacing: 1px;
            }

            label{
                
                input{
                    width: 91px;
                    height: 29px;
                    margin-top: 10px;
                    text-align: center;
                    border-radius: 4px;
                    border: 1px solid #C6D1D0;
                    background: none;
                }
            }

            p{
                display: block;
                width:100%;
                height: 40px;
                line-height: 40px;
                font-size: 14px;
                letter-spacing: 1px;
                text-align: center;
                
            }
        }

        .select_item{
            background-image: linear-gradient(0deg, #008573, #84E795, #C0FFB4);

            b,div{
                color: #fff;
            }

            p{
                color: #999;
            }

            label{

                input{
                    background-color: #fff !important;
                }
            }
        }

        .no_select_item{

            &:hover{
                background-image: linear-gradient(0deg, #008573, #84E795, #C0FFB4);

                b,div{
                    color: #fff !important;
                }

                p{
                    color: #999 !important;
                    background-color: rgba(231, 235, 246,.4) !important;
                }

                label{

                    input{
                        background-color: #fff !important;
                    }
                }
            }
        }
    }
</style>
